apply plugin: ServicePlugin

apply plugin: 'docker-compose'

dockerCompose.isRequiredBy(test)

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion
    environment.put "EVENTUATE_CDC_KAFKA_ENABLE_BATCH_PROCESSING", eventuateCdcKafkaEnableBatchProcessing
    environment.put "EVENTUATE_JAVA_BASE_IMAGE_VERSION", eventuateExamplesBaseImageVersion
    environment.put "EVENTUATE_MESSAGING_KAFKA_IMAGE_VERSION", eventuateMessagingKafkaImageVersion

    projectName = null

    useComposeFiles = ['../docker-compose-mysql-binlog.yml']
    startedServices = ['mongodb', 'kafka', 'zipkin']

    stopContainers = false
}

dependencies {
    implementation "io.eventuate.examples.common:eventuate-examples-common-money:$eventuateCommonExamplesVersion"
    implementation project(":order-history-service-api-web")

    implementation "io.eventuate.tram.core:eventuate-tram-spring-consumer-kafka"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-events-subscriber-starter"

    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.retry:spring-retry:$springRetryVersion"


    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    testImplementation "junit:junit:4.12"
    testImplementation "org.springframework.boot:spring-boot-starter-test"


}

test {
    systemProperty "debug", "true"
}
